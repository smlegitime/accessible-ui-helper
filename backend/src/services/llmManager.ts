/**
 * Description: Performs fixes on a page based on an accessibility report using an LLM
 * Created: Rio Young
 * Created date: Oct 22, 2024 | Updated date: 
 */

import {LlmPrompt, GeneratedFixPage } from '../models/models';
import './errorHandler';

// PromptBuilder
// Retrieve prompt template
// Add few-shot examples (from scanned results)
// Configure LLM call
// Make request
// Update data with new code
// (Store data)
// (FixedPageEvaluator?)


class LLMManager {

    /**
     * Main class method
     * @param promptInfo: contains information needed to generate prompt, such as the 
     *  scanned results and the pageId for page in need of fixing
     *                           
     * @returns The fixed page generated by the LLM
     */
    public getFixedPage(promptInfo: LlmPrompt) : GeneratedFixPage | null { return null; }

     /**
      * Builds a prompt based on the details in the scanned report 
      * @param promptInfo 
      * @returns String of the prompt that will be used when calling the LLM
      */
    private promptBuilder(promptInfo: LlmPrompt) : string | null { return null; }

    /**
     * Takes prompt returned by prompt builder, calls LLM and returns a fixed page
     * @param template 
     * @returns Page fixed based on accessibility report
     */
    private callLLM(template: string) : GeneratedFixPage | null { return null; }
 
    /**
     * Potential additional method to ensure that the fixed page returned is valid, uses Error Handler
     * @param fixedPage 
     * @returns True if page is valid, false otherwise
     */
    private validFixedPage(fixedPage: GeneratedFixPage) : boolean { return false; }

    /**
     * Update the page corresponding with the pageID based on the fixes in the fixed page
     * @param pageId
     * @param fixedPage 
     */
    private updatePage(pageId: string, fixedPage: GeneratedFixPage) : void {}

    
}